<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.oneandone.sales.tools.maven.poms</groupId>
    <artifactId>standard-parent</artifactId>
    <version>3.1.19</version>
  </parent>

  <name>Stool</name>
  <url>https://wiki.1and1.org/UE/StoolHome</url>
  <description>Stage tool - runs multiple web applications on a single machine.</description>

  <groupId>net.oneandone</groupId>
  <artifactId>stool</artifactId>
  <version>3.0.0-SNAPSHOT</version>

  <packaging>jar</packaging>

  <properties>
    <wsd.ypid>19928</wsd.ypid>
    <spring.version>4.0.5.RELEASE</spring.version>
    <spring.security.version>4.0.0.RC1</spring.security.version>
    <sonar.artifact.path>target/${project.build.finalName}.${project.packaging}</sonar.artifact.path>
    <sonar.build-stability.url>${project.ciManagement.system}:${project.ciManagement.url}</sonar.build-stability.url>
    <sonar.artifact.path>target/stool</sonar.artifact.path>
    <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
    <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
    <jacoco.outputDir>${project.build.directory}</jacoco.outputDir>
    <jacoco.out.ut.file>jacoco-ut.exec</jacoco.out.ut.file>
    <sonar.jacoco.reportPath>${jacoco.outputDir}/${jacoco.out.ut.file}</sonar.jacoco.reportPath>
    <jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>
    <sonar.jacoco.itReportPath>${jacoco.outputDir}/${jacoco.out.it.file}</sonar.jacoco.itReportPath>
    <javax.net.ssl.trustStore/>
  </properties>

  <developers>
    <developer>
      <id>mhm</id>
      <name>Michael Hartmeier</name>
      <roles>
        <role>lead</role>
        <role>developer</role>
      </roles>
    </developer>
    <developer>
      <id>mabraun</id>
      <name>Maximilian Braun</name>
    </developer>
    <developer>
      <id>rsternagel</id>
      <name>Richard Sternagel</name>
    </developer>
    <developer>
      <id>garican</id>
      <name>Goekhan Arican</name>
    </developer>
  </developers>

  <scm>
    <url>https://svn.1and1.org/svn/sales/tools/stool/trunk</url>
    <connection>scm:svn:https://svn.1and1.org/svn/sales/tools/stool/trunk</connection>
    <developerConnection>scm:svn:https://svn.1and1.org/svn/sales/tools/stool/trunk</developerConnection>
  </scm>

  <dependencies>
    <dependency>
      <groupId>net.oneandone</groupId>
      <artifactId>sushi</artifactId>
      <version>2.8.17</version>
    </dependency>
    <dependency>
      <groupId>net.oneandone.maven</groupId>
      <artifactId>embedded</artifactId>
      <version>3.8.0</version>
    </dependency>
    <dependency>
      <groupId>net.oneandone</groupId>
      <artifactId>pommes</artifactId>
      <version>2.4.1</version>
    </dependency>

    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <version>4.3.2</version>
    </dependency>

    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>
      <version>1.5.0-b01</version>
      <exclusions>
        <exclusion><!-- because it's part of Java 7 -->
          <groupId>javax.activation</groupId>
          <artifactId>activation</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.7</version>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>1.1.2</version>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.1.2</version>
    </dependency>

    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>2.3</version>
    </dependency>

    <!-- Overview -->

    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.2.4</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
      <version>${spring.security.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
      <version>${spring.security.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-ldap</artifactId>
      <version>${spring.security.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-cas-client</artifactId>
      <version>3.0.8.RELEASE</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.hateoas</groupId>
      <artifactId>spring-hateoas</artifactId>
      <version>0.16.0.RELEASE</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <!-- that's the version we have on the live machines -->
      <version>3.0.1</version>
      <scope>provided</scope>
    </dependency>

    <!-- JSON - used by spring for serialization. TODO: switch to gson instead ... -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>2.4.1</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>2.4.1</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.4.1</version>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2</version>
    </dependency>

    <dependency>
      <groupId>com.github.zafarkhaja</groupId>
      <artifactId>java-semver</artifactId>
      <version>0.7.2</version>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>13.0.1</version>
    </dependency>

    <dependency>
      <groupId>org.tmatesoft.svnkit</groupId>
      <artifactId>svnkit</artifactId>
      <version>1.8.5</version>
    </dependency>

    <!-- test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <includeEmptyDirs>true</includeEmptyDirs>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.oneandone.sales.tools.maven.plugins</groupId>
        <artifactId>linkcheck</artifactId>
        <configuration>
          <ignores>
            org.springframework.security:spring-security-config,org.springframework.ldap:spring-ldap-core,
            org.springframework.data:spring-data-commons, org.springframework.hateoas:spring-hateoas
          </ignores>
        </configuration>
      </plugin>

      <plugin>
        <groupId>net.oneandone.maven.plugins</groupId>
        <artifactId>application</artifactId>
        <version>1.5.1</version>
        <configuration>
          <!-- for generate -->
          <path>$PATH</path>
          <options>-Djava.awt.headless=true</options>
          <name>setup-stool</name>
          <main>net.oneandone.stool.setup.Main</main>
          <equal>com/jcraft/jsch/agentproxy/*.class, org/aopalliance/**/*, META-INF/ASL2.0</equal>
          <remove>META-INF/LICENSE, META-INF/NOTICE, META-INF/NOTICE.txt, META-INF/wsd.properties, META-INF/DEPENDENCIES,
            META-INF/LICENSE.txt,readme.txt,
            META-INF/license.txt, META-INF/notice.txt, overview.html, META-INF/DUMMY.SF, META-INF/DUMMY.DSA, about.html,changelog.txt,
            notice.txt,license.txt
          </remove>
          <overwrite>META-INF/pominfo.properties, org/apache/commons/logging/**/*,
            META-INF/sisu/javax.inject.Named
          </overwrite>
          <concat>META-INF/services/org.apache.lucene.codecs.PostingsFormat, META-INF/spring.*</concat>

          <!-- for upload -->
          <symlink>${env.WSDTOOLS_HOME}/bin/setup-stool</symlink>
          <target>${env.WSDTOOLS_HOME}/stool</target>
        </configuration>
        <executions>
          <execution>
            <id>stool</id>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- Documentation: http://code.google.com/p/docbkx-tools/ -->
        <groupId>com.agilejava.docbkx</groupId>
        <artifactId>docbkx-maven-plugin</artifactId>
        <version>2.0.15</version>
        <configuration>
          <sourceDirectory>src/site/manual</sourceDirectory>
          <includes>manual.xml</includes>
          <targetDirectory>${basedir}/target/site</targetDirectory>
          <xincludeSupported>true</xincludeSupported>
          <preProcess>
            <tstamp>
              <format pattern="yyyy-MM-d" property="now"/>
            </tstamp>
            <mkdir dir="${project.build.directory}/site/manual"/>
            <exec executable="/bin/bash" failonerror="true" output="${project.build.directory}/stool-help.txt">
              <arg value="-c"/>
              <arg value="eval &quot;`${project.build.directory}/stool`&quot; &amp;&amp; stool"/>
            </exec>
            <echo file="${project.build.directory}/now.txt">${now}</echo>
          </preProcess>
        </configuration>
        <executions>
          <execution>
            <id>manual-html</id>
            <phase>pre-site</phase>
            <goals>
              <goal>generate-html</goal>
            </goals>
            <configuration>
              <chunkedOutput>false</chunkedOutput>
              <generateSectionTocLevel>0</generateSectionTocLevel>
            </configuration>
          </execution>
        </executions>
      </plugin>


      <!-- Sonar -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <argLine>${jacoco.agent.ut.arg}</argLine>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <id>integration-test</id>
            <phase>integration-test</phase>
            <goals>
              <goal>integration-test</goal>
            </goals>
            <configuration>
              <runOrder>alphabetical</runOrder>
              <argLine>-Xmx1024m -XX:MaxPermSize=256m -Djava.awt.headless=true ${jacoco.agent.it.arg}
              </argLine>
              <excludes>
                <exclude>**/*ManualIT.java</exclude>
              </excludes>
              <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.7.1.201405082137</version>
        <executions>
          <!-- Prepares a variable, jacoco.agent.ut.arg, that contains the info to be passed to the JVM hosting the code
    being tested. -->
          <execution>
            <id>prepare-ut-agent</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${sonar.jacoco.reportPath}</destFile>
              <propertyName>jacoco.agent.ut.arg</propertyName>
              <append>true</append>
            </configuration>
          </execution>
          <!-- Prepares a variable, jacoco.agent.it.arg, that contains the info to be passed to the JVM hosting the code
    being tested. -->
          <execution>
            <id>prepare-it-agent</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${sonar.jacoco.itReportPath}</destFile>
              <propertyName>jacoco.agent.it.arg</propertyName>
              <append>true</append>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
